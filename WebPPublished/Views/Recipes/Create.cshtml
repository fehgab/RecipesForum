@model WebPPublished.Models.CategoriesListData

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "Recipes", FormMethod.Post, new {@class = "form-horizontal", role = "form", enctype = "multipart/form-data"})) 
{
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
        <h4>Recipes</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RecipesDB.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table>
                    <tr>
                        @foreach (var item in @Model.AllCategory)
{
                            <td width="100" align="center">
                                @Html.Label(@item.DisplayName + " ")
                                @Html.RadioButtonFor(model => model.RecipesDB.CategoryID, @item.ID)
                            </td>
                        }
                    </tr>
                </table>
                @Html.ValidationMessageFor(model => model.RecipesDB.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipesDB.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipesDB.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipesDB.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipesDB.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipesDB.Ingredients, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipesDB.Ingredients, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipesDB.PrepareTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipesDB.PrepareTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipesDB.PrepareTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipesDB.HowToPrepare, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecipesDB.HowToPrepare, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipesDB.HowToPrepare, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="picture" class="control-label col-md-2">Kép feltöltése</label>
            <div class="col-md-10">
                <input type="file" name="picture" id="picture" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Details","Recipes")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
